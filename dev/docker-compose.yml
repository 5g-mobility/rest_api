version: "3.8"

services:
    mongodb:
        image: mongo:4.4.4
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        volumes:
            - ../mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - mongodb-data:/data/db
        networks:
            - mongodb_network
        ports:
            - 27017:27017
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
    mongo-express:
        image: mongo-express:0.54.0
        container_name: mongo-express
        environment:
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
            - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=admin
        volumes:
            - mongodb-data
        depends_on:
            - mongodb
        networks:
            - mongodb_network
        ports:
            - 8081:8081
        healthcheck:
            test:  wget --quiet --tries=3 --spider http://admin:admin123@localhost:8081 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
    rabbitmq:
        image: rabbitmq:3.8.3-management
        container_name: rabbitmq
        restart: unless-stopped
        networks:
            - rabbit_network
        volumes:
            - ../rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
            - ../rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        ports:
            - 5672:5672
            - 15672:15672
    redis:
        image: redis:6.2.1
        command: redis-server --requirepass djangopass
        container_name: redis
        restart: unless-stopped
        volumes:
            - ../redis/redis.conf:/usr/local/etc/redis/redis.conf
        ports:
            - 6379:6379
        networks:
            - redis_network
    celery-worker:
        build: ../.
        container_name: celery-worker
        restart: unless-stopped
        entrypoint: celery
        command: -A rest_api worker --loglevel=info
        environment:
            - ENVIRONMENT=production
        volumes:
            - ../.:/var/www/app/worker
        depends_on:
            - rabbitmq
            - redis
        networks:
            - rabbit_network
            - redis_network
    flower:
        image: mher/flower:0.9.7
        container_name: flower
        command: ["--persistent=True",  "--db=/flower/flower", "--basic_auth=admin:admin"]
        restart: unless-stopped
        volumes:
            - ../flower:/flower
        environment:
            - CELERY_BROKER_URL=amqp://django:djangopass@rabbitmq:5672/celery
            - FLOWER_PORT=5555
        ports:
            - 5555:5555
        depends_on:
            - rabbitmq
            - celery-worker
        networks:
            - rabbit_network


volumes:
    mongodb-data:
        name: mongodb-data

networks:
    mongodb_network:
      name: mongodb_network
    rabbit_network:
        name: rabbit_network
    redis_network:
        name: redis_network