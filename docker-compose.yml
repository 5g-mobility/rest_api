version: "3.8"

services:
    mongodb:
        image: mongo:4.4.4
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        volumes:
            - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - mongodb-data:/data/db
        networks:
            - mongodb_network
        ports:
            - 27017:27017
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
    mongo-express:
        image: mongo-express:0.54.0
        container_name: mongo-express
        environment:
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
            - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=admin
        volumes:
            - mongodb-data:/data/db
        depends_on:
            - mongodb
        networks:
            - mongodb_network
        ports:
            - 8081:8081
        healthcheck:
            test:  wget --quiet --tries=3 --spider http://admin:admin123@localhost:8081 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
    rabbitmq:
        image: rabbitmq:3.8.3-management
        container_name: rabbitmq
        restart: unless-stopped
        networks:
            - rabbit_network
        volumes:
            - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
            - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        ports:
            - 5672:5672
            - 15672:15672
    redis:
        image: redis:6.2.1
        command: redis-server --requirepass djangopass
        container_name: redis
        restart: unless-stopped
        volumes:
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        ports:
            - 6379:6379
        networks:
            - redis_network
    django:
        build: .
        profiles: ["prod"]
        entrypoint: ["sh", "./entrypoint.sh"]
        restart: unless-stopped
        container_name: django
        volumes:
            - .:/code
            - ./nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 8000:8000
        environment:
            - ENVIRONMENT=production
            - EXTERNAL_IP=${EXTERNAL_IP}
            - DB_NAME=5g-mobility
            - DB_USER=django
            - DB_PASSWORD=djangopass
            - DB_HOST=mongodb
            - DB_PORT=27017
            - DB_AUTH=5g-mobility
            - REDIS_HOST=redis
            - RABBIT_HOST=rabbitmq
        networks:
            - mongodb_network
            - rabbit_network
            - redis_network
        depends_on:
            - mongodb
            - rabbitmq
            - redis
    celery-worker:
        build:
            context: .
        entrypoint: celery
        command: -A rest_api worker --loglevel=info
        restart: unless-stopped
        environment:
            - ENVIRONMENT=production
            - DB_NAME=5g-mobility
            - DB_USER=django
            - DB_PASSWORD=djangopass
            - DB_HOST=mongodb
            - DB_PORT=27017
            - DB_AUTH=5g-mobility
            - REDIS_HOST=redis
            - RABBIT_HOST=rabbitmq
        depends_on:
            - rabbitmq
            - redis
            - mongodb
        networks:
            - rabbit_network
            - redis_network
            - mongodb_network
    flower:
        image: mher/flower:0.9.7
        container_name: flower
        entrypoint: ["sh", "./entrypoint.sh"]
        restart: unless-stopped
        volumes:
            - ./flower:/flower
            - ./flower/entrypoint.sh:/data/entrypoint.sh
        environment:
            - CELERY_BROKER_URL=amqp://django:djangopass@rabbitmq:5672/celery
            - FLOWER_PORT=5555
        ports:
            - 5555:5555
        depends_on:
            - rabbitmq
            - celery-worker
        networks:
            - rabbit_network
    mqtt-consumer-radar-ria-ativa:
        build:
            context: .
        entrypoint: ["python", "manage.py", "mqtt_consumer_radar", "--broker_url", "broker.es.av.it.pt",
                     "--broker_port", "1883", "--client_id", "5g-mobility-consumer-radar-riaAtiva",
                     "--topic", "its_center/inqueue/xml/7/CPM/0/3/3/1/1/0/0/1/1/3/0/2/2/1"]

        restart: unless-stopped
        environment:
            - ENVIRONMENT=production
            - DB_NAME=5g-mobility
            - DB_USER=django
            - DB_PASSWORD=djangopass
            - DB_HOST=mongodb
            - DB_PORT=27017
            - DB_AUTH=5g-mobility
            - REDIS_HOST=redis
            - RABBIT_HOST=rabbitmq
        depends_on:
            - mongodb
        networks:
            - mongodb_network
    mqtt-consumer-radar-ponte-barra:
        build:
            context: .
        entrypoint: [ "python", "manage.py", "mqtt_consumer_radar", "--broker_url", "broker.es.av.it.pt",
                      "--broker_port", "1883", "--client_id", "5g-mobility-consumer-radar-ponteBarra",
                      "--topic", "its_center/inqueue/xml/5/CPM/0/3/3/1/1/0/0/1/1/3/0/2/1/2" ]

        restart: unless-stopped
        depends_on:
            - mongodb
        networks:
            - mongodb_network
    mqtt-consumer-emulator:
        build:
            context: .
        entrypoint: [ "python", "manage.py", "mqtt_consumer_emulator", "--broker_url", "broker.es.av.it.pt",
                      "--broker_port", "1883", "--client_id", "5g-mobility-consumer-emulator",
                      "--topic", "its_center/inqueue/5g-mobility" ]
        restart: unless-stopped
        environment:
            - ENVIRONMENT=production
            - DB_NAME=5g-mobility
            - DB_USER=django
            - DB_PASSWORD=djangopass
            - DB_HOST=mongodb
            - DB_PORT=27017
            - DB_AUTH=5g-mobility
            - REDIS_HOST=redis
            - RABBIT_HOST=rabbitmq
        depends_on:
            - mongodb
        networks:
            - mongodb_network
    processor_old_radar_events:
        build:
            context: .
        entrypoint: [ "python", "manage.py", "process_old_radar_events"]
        restart: unless-stopped
        environment:
            - ENVIRONMENT=production
            - DB_NAME=5g-mobility
            - DB_USER=django
            - DB_PASSWORD=djangopass
            - DB_HOST=mongodb
            - DB_PORT=27017
            - DB_AUTH=5g-mobility
            - REDIS_HOST=redis
            - RABBIT_HOST=rabbitmq
        depends_on:
            - mongodb
        networks:
            - mongodb_network


volumes:
    mongodb-data:
        name: mongodb-data

networks:
    mongodb_network:
        name: mongodb_network
    rabbit_network:
        name: rabbit_network
    redis_network:
        name: redis_network